name: Deploy Admin Panel Laravel Project CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  laravel-tests:
  
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, pdo_mysql
          coverage: none

      - name: Install dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-bucket: ${{ secrets.AWS_BUCKET }}
          aws-region: us-east-1

      - name: Setup .env
        run: |
          echo "APP_ENV=testing" >> .env
          echo "APP_KEY=" >> .env
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=:memory:" >> .env

      - name: Generate key
        run: php artisan key:generate

      - name: Run migrations
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ':memory:'
        run: php artisan migrate --force

      - name: Run tests
        run: php artisan test

  deploy:
    needs: laravel-tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Disable host key checking
        run: |
          mkdir -p ~/.ssh
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config


      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /var/www/futurixtech
            git pull origin main

            # Backend (Laravel)
            composer install --no-dev --optimize-autoloader
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # Frontend (Vue.js)
            npm install
            cp -r dist/* public/   # adjust if your Vue build outputs elsewhere

            # Restart PHP + Nginx
            sudo systemctl restart php8.2-fpm
            sudo systemctl restart nginx

            # Restart Supervisor (queues)
            sudo supervisorctl reread
            sudo supervisorctl update
            sudo supervisorctl restart all

            # Cron jobs are set up once manually on server, no need each deploy
            echo "Deployment finished at $(date)"
